import pandas as pd

df = pd.read_csv('/content/reseñas_preprocesadas.csv', parse_dates=['date'])
df['texto_filtrado'] = df['texto_filtrado'].fillna('')
df['year'] = df['date'].dt.year
df.head()

import matplotlib.pyplot as plt
import seaborn as sns

reseñas_por_año = df['year'].value_counts().sort_index()

plt.figure(figsize=(10, 5))
sns.barplot(x=reseñas_por_año.index, y=reseñas_por_año.values, color='darkcyan')
plt.title('Número de reseñas por año')
plt.xlabel('Año')
plt.ylabel('Número de reseñas')
plt.grid(axis='y')
plt.tight_layout()
plt.show()

df['date'] = pd.to_datetime(df['date'], errors='coerce')

reseñas_por_mes = df.groupby(df['date'].dt.to_period('M')).size()

plt.figure(figsize=(15,6))
reseñas_por_mes.plot(kind='line', color='darkcyan')
plt.title('Gráfico de tendencias de reseñas')
plt.xlabel('Años')
plt.ylabel('Número de reseñas')
plt.grid(axis='y')
plt.tight_layout()
plt.show()

import pandas as pd
import matplotlib.pyplot as plt

listings = pd.read_csv('listings.csv')

precio_medio_filtrado = listings_filtrado.groupby('room_type')['price'].mean().reset_index()

plt.figure(figsize=(10, 5))
plt.bar(x=precio_medio_filtrado['room_type'], height=precio_medio_filtrado['price'], color='darkcyan')
plt.title('Precio medio por tipo de alojamiento')
plt.xlabel('Tipo de alojamiento')
plt.ylabel('Precio medio (€)')
plt.xticks(rotation=45)
plt.grid(axis='y')
plt.tight_layout()
plt.show()

df_entire_home = df[df['room_type'].str.contains('Entire', case=False, na=False)]

df_entire_home = df_entire_home[df_entire_home['neighbourhood'].str.lower() != 'campanillas']

df_entire_home['price'] = pd.to_numeric(df_entire_home['price'], errors='coerce')

precio_por_barrio = df_entire_home.groupby('neighbourhood')['price'].describe()

precio_ordenado = precio_por_barrio.sort_values('mean', ascending=False)

plt.figure(figsize=(12, 8))
sns.boxplot(data=df_entire_home, x='price', y='neighbourhood', order=precio_ordenado.index, color='darkcyan')
plt.title('Distribución del precio por noche de alojamientos "Entire home" por barrio')
plt.xlabel('Precio por noche (€)')
plt.ylabel('Barrio')
plt.xlim(0, 220), (df_entire_home['price'].quantile(0.90))
plt.grid(axis='y')
plt.tight_layout()
plt.show()

top_barrios = df['neighbourhood'].value_counts().head(10)

plt.figure(figsize=(10, 5))
sns.barplot(x=top_barrios.index, y=top_barrios.values, color='darkcyan')
plt.title('Top 10 barrios con más reseñas')
plt.xlabel('Barrio')
plt.ylabel('Número de reseñas')
plt.grid(axis='y')
plt.xticks(rotation=45)
plt.tight_layout()
plt.show()

from sklearn.feature_extraction.text import CountVectorizer

vectorizer = CountVectorizer()
X = vectorizer.fit_transform(df['texto_filtrado'].dropna())

frecuencias = X.sum(axis=0)
palabras = vectorizer.get_feature_names_out()

freq_df = pd.DataFrame({'palabra': palabras, 'frecuencia': frecuencias.A1})
freq_df = freq_df.sort_values(by='frecuencia', ascending=False).head(10)

plt.figure(figsize=(10, 5))
sns.barplot(x='frecuencia', y='palabra', data=freq_df, palette='Blues_d')
plt.title('Top 10 palabras más frecuentes')
plt.xlabel('Frecuencia')
plt.ylabel('Palabra')
plt.tight_layout()
plt.show()

vectorizer_bi = CountVectorizer(ngram_range=(2, 2))
X_bi = vectorizer_bi.fit_transform(df['texto_filtrado'].dropna())
frecuencias_bi = X_bi.sum(axis=0).A1
bigramas = vectorizer_bi.get_feature_names_out()
df_bi = pd.DataFrame({'bigramas': bigramas, 'frecuencia': frecuencias_bi})
df_bi = df_bi.sort_values(by='frecuencia', ascending=False).head(5)

plt.figure(figsize=(10, 4))
sns.barplot(x='frecuencia', y='bigramas', data=df_bi, palette='Blues_d')
plt.title('Top 5 Bigramas más frecuentes')
plt.xlabel('Frecuencia')
plt.ylabel('Bigrama')
plt.tight_layout()
plt.show()

vectorizer_tri = CountVectorizer(ngram_range=(3, 3))
X_tri = vectorizer_tri.fit_transform(df['texto_filtrado'].dropna())
frecuencias_tri = X_tri.sum(axis=0).A1
trigramas = vectorizer_tri.get_feature_names_out()
df_tri = pd.DataFrame({'trigramas': trigramas, 'frecuencia': frecuencias_tri})
df_tri = df_tri.sort_values(by='frecuencia', ascending=False).head(5)

plt.figure(figsize=(10, 4))
sns.barplot(x='frecuencia', y='trigramas', data=df_tri, palette='Blues_d')
plt.title('Top 5 Trigramas más frecuentes')
plt.xlabel('Frecuencia')
plt.ylabel('Trigrama')
plt.tight_layout()
plt.show()

from wordcloud import WordCloud
texto_completo = ' '.join(df['texto_filtrado'].dropna())

wordcloud = WordCloud(
    width=800,
    height=400,
    background_color='white',
    colormap='viridis',
    max_words=200
).generate(texto_completo)

plt.figure(figsize=(12, 6))
plt.imshow(wordcloud, interpolation='bilinear')
plt.axis('off')
plt.title('Nube de Palabras (WordCloud)')
plt.tight_layout()
plt.show()

import folium
from folium.plugins import HeatMap
mapa = folium.Map(location=[df['latitude'].mean(), df['longitude'].mean()], zoom_start=12)
coordenadas = df[['latitude', 'longitude']].dropna().values.tolist()
HeatMap(coordenadas, radius=8).add_to(mapa)
mapa
